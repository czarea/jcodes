buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'java'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: "jacoco"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
sourceSets {
    main.java.srcDirs = ['src/main/java']
    main.resources.srcDirs = ['src/main/resources']
    test.java.srcDirs = ['src/test/java']
    test.resources.srcDirs = ['src/test/resources']
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://192.168.32.55:8083/nexus/content/groups/public/'
    }
}
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

ext {
    p3c = "1.3.6"
    pmdVersion = '5.5.2'
}

pmd {
    consoleOutput = true
    toolVersion = pmdVersion
    ignoreFailures = true
    ruleSetConfig = resources.text.fromFile("${project.rootDir}/config/pmd/ruleset.xml")
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

tasks.withType(Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/checkstyle/suppressions.xml").absolutePath
    include '**/*.java'
    exclude '**/gen/**'
    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

tasks.withType(FindBugs) {
    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = false
        html.stylesheet resources.text.fromFile("${project.rootDir}/config/findbugs/findbugs-custom.xsl")
    }
}

dependencies {
    pmd "com.alibaba.p3c:p3c-pmd:${p3c}"

    //springboot
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-configuration-processor')

    // springboot test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
